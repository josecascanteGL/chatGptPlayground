```csharp
        protected void Application_Start()
        {
            Populate_DB_If_None();
            GlobalConfiguration.Configure(WebApiConfig.Register);
        }

        private static void Populate_DB_If_None()
        {
            var context = new UnishopEntities();

            // Check if the database exists, if not, create it
            if (!context.Database.Exists())
            {
                context.Database.Create();

                // Directly connecting to the database to add a computed column to the app_unicorn table using SQL statement
                // This approach is used because computed column can't be generated by EF6 given a database-first approach.
                SqlConnection sqlCon = new SqlConnection(@"Data Source=db.unishop.local,1433\unishop; initial catalog=Unishop; User ID=admin; Password=dMdLgX6sZoXmOU2rnWTS;");
                SqlDataAdapter sqlda = new SqlDataAdapter("ALTER TABLE inventory ADD year_model AS (datepart(year,date_create)); ", sqlCon);
                sqlda.Fill(new DataTable());

                // Reading data from unicorns.csv file
                string[] readText = File.ReadAllLines(HttpContext.Current.Server.MapPath(".") + @"\unicorns.csv");
                IList<inventory> newunicorns = new List<inventory>();
                foreach (var line in readText)
                {
                    // Splitting each line by comma to get individual fields
                    string[] fields = line.Split(',');
                    var unicorn = new inventory();
                    unicorn.unicorn_id = Guid.Parse(fields[0]);
                    unicorn.name = fields[1];
                    unicorn.description = fields[2];
                    unicorn.price = Convert.ToDecimal(fields[3]);
                    unicorn.image = fields[4];
                    unicorn.date_create = Convert.ToDateTime(fields[5]);
                    newunicorns.Add(unicorn);
                }

                // Adding the new unicorns to the database
                context.inventories.AddRange(newunicorns);
                context.SaveChanges();
            }
        }
```